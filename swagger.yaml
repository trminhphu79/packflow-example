swagger: '2.0'
info:
  version: '1.0'
  title: "Product Management API"
  description: Basic API for managing products
  license:
    name: MIT
    url: https://github.com/apiaryio/product-api/blob/master/LICENSE
host: localhost:8080
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /products:
    get:
      tags:
        - Products
      summary: List All Products
      description: Retrieve a list of all products
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
          examples:
            application/json:
              - id: "09"
                type: "CREDIT_CARD"
                name: "Gem Visa"
                version: "v1"
              - id: "10"
                type: "CREDIT_CARD" 
                name: "28 Degrees"
                version: "v1"
    
    post:
      tags:
        - Products
      summary: Create New Product
      description: Create a new product
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductRequest'
      responses:
        201:
          description: Product Created
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/Error'

  /product/{id}:
    get:
      tags:
        - Products
      summary: Get Product Details
      description: Retrieve details of a specific product
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Product ID
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/Product'
        404:
          description: Product Not Found
          schema:
            $ref: '#/definitions/Error'
    
    put:
      tags:
        - Products
      summary: Update Product
      description: Update an existing product
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Product ID
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductRequest'
      responses:
        200:
          description: Product Updated
          schema:
            $ref: '#/definitions/Product'
        404:
          description: Product Not Found
          schema:
            $ref: '#/definitions/Error'
        400:
          description: Invalid Input
          schema:
            $ref: '#/definitions/Error'
    
    delete:
      tags:
        - Products
      summary: Delete Product
      description: Delete an existing product
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Product ID
      responses:
        204:
          description: Product Deleted
        404:
          description: Product Not Found
          schema:
            $ref: '#/definitions/Error'

definitions:
  Product:
    type: object
    properties:
      id:
        type: string
        description: Product identifier
      type:
        type: string
        description: Product type (e.g. CREDIT_CARD, PERSONAL_LOAN)
        enum: [CREDIT_CARD, PERSONAL_LOAN, MICHAEL_TRAN, DON_HO, HIP]
      name:
        type: string
        description: Product name
      version:
        type: string
        description: Product version
    required:
      - id
      - type
      - name
      - version
    example:
      id: "09"
      type: "CREDIT_CARD"
      name: "Gem Visa"
      version: "v1"

  ProductRequest:
    type: object
    properties:
      type:
        type: string
        enum: [CREDIT_CARD, PERSONAL_LOAN, MICHAEL_TRAN, DON_HO, HIP]
      name:
        type: string
      version:
        type: string
    required:
      - type
      - name
      - version
    example:
      type: "CREDIT_CARD"
      name: "New Card"
      version: "v1"

  Error:
    type: object
    properties:
      message:
        type: string
    required:
      - message
    example:
      message: "Product not found"

tags:
  - name: Products
    description: Product management endpoints