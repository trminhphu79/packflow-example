swagger: '2.0'
info:
  version: '1.1'
  title: "Product Management API Michael Tran"
  description: A comprehensive API for managing products, categories, inventory, and product reviews.
  license:
    name: MIT
    url: https://github.com/apiaryio/product-api/blob/master/LICENSE
host: http://localhost:8080
basePath: /v1
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /products:
    get:
      summary: List All Products
      parameters:
        - name: category
          in: query
          type: string
          required: false
          description: Filter products by category
        - name: limit
          in: query
          type: integer
          required: false
          default: 20
          description: Number of items to return
        - name: offset
          in: query
          type: integer
          required: false
          default: 0
          description: Number of items to skip
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              total:
                type: integer
              items:
                type: array
                items:
                  $ref: '#/definitions/Product'
    post:
      summary: Create a New Product
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductRequest'
      responses:
        201:
          description: Product Created
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid Input
        
  /products/{productId}:
    get:
      summary: Get Product Details
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/Product'
        404:
          description: Product Not Found
    
    put:
      summary: Update Product
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductRequest'
      responses:
        200:
          description: Product Updated
          schema:
            $ref: '#/definitions/Product'
    
    delete:
      summary: Delete Product
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        204:
          description: Product Deleted

  /products/{productId}/reviews:
    get:
      summary: Get Product Reviews
      parameters:
        - name: productId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
    
    post:
      summary: Add Product Review
      parameters:
        - name: productId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReviewRequest'
      responses:
        201:
          description: Review Added
          schema:
            $ref: '#/definitions/Review'

  /categories:
    get:
      summary: List All Categories
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
    
    post:
      summary: Create New Category
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CategoryRequest'
      responses:
        201:
          description: Category Created
          schema:
            $ref: '#/definitions/Category'

definitions:
  Product:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: number
        format: float
      category:
        type: string
      sku:
        type: string
      inventory:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      images:
        type: array
        items:
          type: string
      average_rating:
        type: number
        format: float
    required:
      - id
      - name
      - price
      - category
      - sku

  ProductRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      price:
        type: number
        format: float
      category:
        type: string
      sku:
        type: string
      inventory:
        type: integer
      images:
        type: array
        items:
          type: string
    required:
      - name
      - price
      - category
      - sku
    example:
      name: "Premium Wireless Headphones"
      description: "High-quality wireless headphones with noise cancellation"
      price: 199.99
      category: "Electronics"
      sku: "HDPH-001"
      inventory: 100
      images: 
        - "https://example.com/images/headphones-1.jpg"

  Review:
    type: object
    properties:
      id:
        type: string
      product_id:
        type: string
      user_id:
        type: string
      rating:
        type: integer
        minimum: 1
        maximum: 5
      comment:
        type: string
      created_at:
        type: string
        format: date-time
    required:
      - id
      - product_id
      - user_id
      - rating

  ReviewRequest:
    type: object
    properties:
      rating:
        type: integer
        minimum: 1
        maximum: 5
      comment:
        type: string
    required:
      - rating
    example:
      rating: 5
      comment: "Excellent product! Great sound quality and comfortable to wear."

  Category:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      parent_id:
        type: string
      created_at:
        type: string
        format: date-time
    required:
      - id
      - name

  CategoryRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      parent_id:
        type: string
    required:
      - name
    example:
      name: "Electronics"
      description: "Electronic devices and accessories"